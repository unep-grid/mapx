version: '3.2'

# ports : host:container
services:
  traefik:
    networks:
      - backend
      - frontend
    image: traefik:v2.3.2
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - target: 80
        published: 8880
        mode: host
      - target: 8080
        published: 8881
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./_shared/traefik/certs:/certs
  search:
    networks:
      - backend
      - frontend
    image: getmeili/meilisearch:v0.20.0
    env_file: mapx.dev.env
    restart: always
    hostname: search
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.search.rule=Host(`search.mapx.localhost`)'
      - 'traefik.http.routers.search.entrypoints=web'
      - 'traefik.http.services.search.loadbalancer.server.port=7700'
    volumes:
      - searchmeili:/data.ms
    ports:
      - 7700
  app:
    networks:
      - backend
      - frontend
    env_file: mapx.dev.env
    build: ./app/.
    image: fredmoser/mx-app-shiny:1.9.40-alpha.2-debian
    restart: always
    ports:
      - 3838
    hostname: mx_app
    depends_on:
      - pg
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.middlewares.nocache.headers.customresponseheaders.CACHE-CONTROL:no-cache'
      - 'traefik.http.routers.app.rule=Host(`app.mapx.localhost`)'
      - 'traefik.http.routers.app.entrypoints=web'
      - 'traefik.http.routers.app.service=app'
      - 'traefik.http.services.app.loadbalancer.server.port=3838'
      - 'traefik.http.routers.dev.rule=Host(`dev.mapx.localhost`)'
      - 'traefik.http.routers.dev.entrypoints=web'
      - 'traefik.http.routers.dev.service=dev'
      - 'traefik.http.services.dev.loadbalancer.server.port=3434'
    volumes:
      - ./app:/appdev
      - ./_shared:/shared
  api:
    networks:
      - backend
      - frontend
    env_file: mapx.dev.env
    build: ./api/.
    image: fredmoser/mx-api-node:1.9.40-alpha.2-alpine
    restart: always
    ports:
      - 3030
    hostname: mx_api
    depends_on:
      - pg
      - redis
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.middlewares.nocache.headers.customresponseheaders.CACHE-CONTROL:no-cache'
      - 'traefik.http.middlewares.wcompress.compress=true'
      - 'traefik.http.middlewares.wcompress.compress.excludedcontenttypes=text/plain'
      - 'traefik.http.routers.api.rule=Host(`api.mapx.localhost`)'
      - 'traefik.http.routers.api.entrypoints=web'
      - 'traefik.http.routers.api.service=api'
      - 'traefik.http.services.api.loadbalancer.server.port=3030'
      - 'traefik.http.routers.apidev.rule=Host(`apidev.mapx.localhost`)'
      - 'traefik.http.routers.apidev.entrypoints=web'
      - 'traefik.http.routers.apidev.service=apidev'
      - 'traefik.http.services.apidev.loadbalancer.server.port=3333'
    volumes:
      - ./api:/apidev
      - ./_shared:/shared
  geoserver:
    networks:
      - backend
      - frontend
    env_file: mapx.dev.env
    build: ./geoserver/.
    image: fredmoser/mx-api-geoserver:2.18.1-alpine
    ports:
      - 8882:8080
    volumes:
      - ./_shared/geoserver:/shared/geoserver
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.geoserver.rule=Host(`geoserver.mapx.localhost`)'
      - 'traefik.http.routers.geoserver.entrypoints=web'
      - 'traefik.http.services.geoserver.loadbalancer.server.port=8080'
  pg:
    networks:
      - backend
      - frontend
    env_file: mapx.dev.env
    image: postgis/postgis:13-3.1-alpine
    restart: always
    hostname: pg
    volumes:
      - ./_shared:/shared
      - ./pg/init/script_initdb.sh:/docker-entrypoint-initdb.d/script_initdb.sh
      - ./pg/init/sql_files:/docker-entrypoint-initdb.d/sql_files
    ports:
      - 5432:5432
  routines:
    networks:
      - backend
    env_file: mapx.dev.env
    image: fredmoser/mx-api-node:1.9.40-alpha.2-alpine
    hostname: mx_routines
    depends_on:
      - pg
      - redis
      - traefik
      - search
    command: ['node', '/routinesdev/routines.js']
    volumes:
      - ./api:/routinesdev
  redis:
    networks:
      - backend
    image: redis:alpine
    restart: always
    hostname: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6379
  probe:
    networks:
      - frontend
    build: ./probe/.
    image: fredmoser/mx-probe:0.2-go
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.probe.rule=Host(`probe.mapx.localhost`)'
      - 'traefik.http.routers.probe.entrypoints=web'
      - 'traefik.http.services.probe.loadbalancer.server.port=8080'
    ports:
      - 8080
  wsecho:
    networks:
      - frontend
    image: jmalloc/echo-server
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.wsecho.rule=Host(`wsecho.mapx.localhost`)'
      - 'traefik.http.routers.wsecho.entrypoints=web'
      - 'traefik.http.services.wsecho.loadbalancer.server.port=8080'
    ports:
      - 8080
  mailhog:
    networks:
      - frontend
    image: mailhog/mailhog
    logging:
      driver: none
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.mailhog.rule=Host(`mail.mapx.localhost`)'
      - 'traefik.http.routers.mailhog.entrypoints=web'
      - 'traefik.http.services.mailhog.loadbalancer.server.port=8025'

volumes:
  searchmeili:

networks:
  frontend:
  backend:
